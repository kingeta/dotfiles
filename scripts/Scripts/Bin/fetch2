#!/bin/bash

# information

name(){
    echo -e -n "  \e[1;31m$(whoami)\033[0m@\e[1;31m$(hostname)"
}

cpu(){
    echo -e -n "   \e[1;32mCPU:\033[0m $( cat /proc/cpuinfo | grep 'name' | head -1 | cut -c 14- )"
}

disk(){
    DISK="$(df -h --total 2> /dev/null | tail -1)"
    DISKS="$(echo $DISK | awk '{print $2}')"
    DISKF="$(echo $DISK | awk '{print $4}')"
    echo -e -n "  \e[1;34mDISK:\033[0m $DISKF/$DISKS"
}

music(){
    echo -e -n " \e[1;33mMUSIC:\033[0m $(mpc current)"
}

wm(){
    echo -e -n "    \e[1;35mWM:\033[0m" && cat ~/.xinitrc | grep exec | sed s/"exec"/""/g
}

font(){
    FONT="$(cat ~/.Xresources | grep "ff" | cut -d ':' -f 2)"
    echo -e -n "  \e[1;36mFONT:\033[0m $FONT"
}

github(){
    GITHUB="github.com/kingeta/dotfiles"
    echo -e -n "  \e[1;37mDOTS:\033[0m $GITHUB"
}

bar(){
    tput setb 3
    printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
    tput sgr0
}

ram () {
    hw_mem=0
    free_mem=0
    human=1024
    if [ "$distro" == "Mac OS X" ]; then
        totalmem=$(echo "$(sysctl -n hw.memsize)"/${human}^2|bc)
        wiredmem=$(vm_stat | grep wired | awk '{ print $4 }' | sed 's/\.//')
        activemem=$(vm_stat | grep ' active' | awk '{ print $3 }' | sed 's/\.//')
        compressedmem=$(vm_stat | grep occupied | awk '{ print $5 }' | sed 's/\.//')
        usedmem=$(((${wiredmem} + ${activemem} + ${compressedmem}) * 4096 / 1024 / 1024))               
    elif [ "$distro" == "Cygwin" ]; then
        total_mem=$(awk '/MemTotal/ { print $2 }' /proc/meminfo)
        totalmem=$((${total_mem}/1024))
        free_mem=$(awk '/MemFree/ { print $2 }' /proc/meminfo)
        used_mem=$((${total_mem} - ${free_mem}))
        usedmem=$((${used_mem}/1024))
    elif [ "$distro" == "FreeBSD" ]; then
        phys_mem=$(sysctl -n hw.physmem)
        size_mem=$phys_mem
        size_chip=1
        guess_chip=`echo "$size_mem / 8 - 1" | bc`
        while [ $guess_chip != 0 ]; do
            guess_chip=`echo "$guess_chip / 2" | bc`
            size_chip=`echo "$size_chip * 2" | bc`
        done
        round_mem=`echo "( $size_mem / $size_chip + 1 ) * $size_chip " | bc`
        totalmem=$(($round_mem / ($human * $human) ))
        pagesize=$(sysctl -n hw.pagesize)
        inactive_count=$(sysctl -n vm.stats.vm.v_inactive_count)
        inactive_mem=$(($inactive_count * $pagesize))
        cache_count=$(sysctl -n vm.stats.vm.v_cache_count)
        cache_mem=$(($cache_count * $pagesize))
        free_count=$(sysctl -n vm.stats.vm.v_free_count)
        free_mem=$(($free_count * $pagesize))
        avail_mem=$(($inactive_mem + $cache_mem + $free_mem))
        used_mem=$(($round_mem - $avail_mem))
        usedmem=$(($used_mem / ($human * $human) ))
    elif [ "$distro" == "OpenBSD" ]; then
        totalmem=$(top -1 1 | awk '/Real:/ {k=split($3,a,"/");print a[k] }' | tr -d 'M')
        usedmem=$(top -1 1 | awk '/Real:/ {print $3}' | sed 's/M.*//')
    elif [ "$distro" == "NetBSD" ]; then
        phys_mem=$(awk '/MemTotal/ { print $2 }' /proc/meminfo)
        totalmem=$((${phys_mem} / $human))
        if grep -q 'Cached' /proc/meminfo; then
            cache=$(awk '/Cached/ {print $2}' /proc/meminfo)
            usedmem=$((${cache} / $human))
        else
            free_mem=$(awk '/MemFree/ { print $2 }' /proc/meminfo)
            used_mem=$((${phys_mem} - ${free_mem}))
            usedmem=$((${used_mem} / $human))
        fi
    else
        mem_info=$(</proc/meminfo)
        mem_info=$(echo $(echo $(mem_info=${mem_info// /}; echo ${mem_info//kB/})))
        for m in $mem_info; do
            if [[ ${m//:*} = MemTotal ]]; then
                memtotal=${m//*:}
            fi

            if [[ ${m//:*} = MemFree ]]; then
                memfree=${m//*:}
            fi

            if [[ ${m//:*} = Buffers ]]; then
                membuffer=${m//*:}
            fi

            if [[ ${m//:*} = Cached ]]; then
                memcached=${m//*:}
            fi
        done

        usedmem="$(((($memtotal - $memfree) - $membuffer - $memcached) / $human))"
        totalmem="$(($memtotal / $human))"
    fi
    mem="${usedmem}MB / ${totalmem}MB"
    echo -e -n "  \e[1;37m RAM:\033[0m $mem"
}

# displaying it

echo -e -n "$(name)
$(cpu)
$(disk)
$(wm)
$(music)
$(font)
$(github)
$(ram)
"
